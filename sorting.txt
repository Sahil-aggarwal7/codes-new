#include&lt;stdio.h&gt;
#include&lt;sys/types.h&gt;
#include&lt;unistd.h&gt;
#include&lt;stdlib.h&gt;
void bubblesort(int arr[30],int n)
{
int i,j,temp;
for(i=0;i&lt;n;i++)
{
for(j=0;j&lt;n-1;j++)
{
if(arr[j]&gt;arr[j+1])
{
temp=arr[j];
arr[j]=arr[j+1];

arr[j+1]=temp;
} } }}
void insertionsort(int arr[30], int n) 
{  
    int i, j, temp;  
    for (i = 1; i &lt; n; i++) {  
        temp = arr[i];  
        j = i - 1;  
  
        while(j&gt;=0 &amp;&amp; temp &lt;= arr[j]) 
        {    
            arr[j+1] = arr[j];     
            j = j-1;    
        }    
        arr[j+1] = temp;    
    }  
}  
void fork1()
{
  int arr[25],arr1[25],n,i,status;
  printf(&quot;\nEnter the no of values in array :&quot;);
  scanf(&quot;%d&quot;,&amp;n);
  printf(&quot;\nEnter the array elements :&quot;);
  for(i=0;i&lt;n;i++)
     scanf(&quot;%d&quot;,&amp;arr[i]);
  int pid=fork();
   if(pid==0)
    {
       sleep(10);
       printf(&quot;\nchild process\n&quot;);
       printf(&quot;child process id=%d\n&quot;,getpid());

       insertionsort(arr,n);
        printf(&quot;\nElements Sorted Using insertionsort:&quot;);
      printf(&quot;\n&quot;);
        for(i=0;i&lt;n;i++)
     printf(&quot;%d,&quot;,arr[i]);
     printf(&quot;\b&quot;);
      printf(&quot;\nparent process id=%d\n&quot;,getppid());
      system(&quot;ps -x&quot;);
 }    
      else
       {
      printf(&quot;\nparent process\n&quot;);
      printf(&quot;\nparent process id=%d\n&quot;,getppid());
bubblesort(arr,n);       
printf(&quot;Elements Sorted Using bubblesort:&quot;);

      printf(&quot;\n&quot;);
       for(i=0;i&lt;n;i++)
     printf(&quot;%d,&quot;,arr[i]);
     printf(&quot;\n\n\n&quot;); 
      } 
 }     
 int main()
 {
    fork1();
    return 0;
 }